//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SteamAccountSwitcher.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "15.9.0.0")]
    public sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string SteamPath {
            get {
                return ((string)(this["SteamPath"]));
            }
            set {
                this["SteamPath"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool MustUpgrade {
            get {
                return ((bool)(this["MustUpgrade"]));
            }
            set {
                this["MustUpgrade"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("48")]
        public int ButtonHeight {
            get {
                return ((int)(this["ButtonHeight"]));
            }
            set {
                this["ButtonHeight"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool AlwaysOn {
            get {
                return ((bool)(this["AlwaysOn"]));
            }
            set {
                this["AlwaysOn"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string SteamLaunchArgs {
            get {
                return ((string)(this["SteamLaunchArgs"]));
            }
            set {
                this["SteamLaunchArgs"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string OnStartLoginName {
            get {
                return ((string)(this["OnStartLoginName"]));
            }
            set {
                this["OnStartLoginName"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string Accounts {
            get {
                return ((string)(this["Accounts"]));
            }
            set {
                this["Accounts"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("320")]
        public int Width {
            get {
                return ((int)(this["Width"]));
            }
            set {
                this["Width"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int OptionsIndex {
            get {
                return ((int)(this["OptionsIndex"]));
            }
            set {
                this["OptionsIndex"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool StartSteamMinimized {
            get {
                return ((bool)(this["StartSteamMinimized"]));
            }
            set {
                this["StartSteamMinimized"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool MultiInstance {
            get {
                return ((bool)(this["MultiInstance"]));
            }
            set {
                this["MultiInstance"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool StartSteamMinimizedOnlyOnStartup {
            get {
                return ((bool)(this["StartSteamMinimizedOnlyOnStartup"]));
            }
            set {
                this["StartSteamMinimizedOnlyOnStartup"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool NumberHotkeys {
            get {
                return ((bool)(this["NumberHotkeys"]));
            }
            set {
                this["NumberHotkeys"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("#FFF0F0F0")]
        public global::System.Windows.Media.Color WindowColor {
            get {
                return ((global::System.Windows.Media.Color)(this["WindowColor"]));
            }
            set {
                this["WindowColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ExitOnSwitch {
            get {
                return ((bool)(this["ExitOnSwitch"]));
            }
            set {
                this["ExitOnSwitch"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("#FFE0E0E0")]
        public global::System.Windows.Media.Color DefaultButtonColor {
            get {
                return ((global::System.Windows.Media.Color)(this["DefaultButtonColor"]));
            }
            set {
                this["DefaultButtonColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("#FF000000")]
        public global::System.Windows.Media.Color DefaultButtonTextColor {
            get {
                return ((global::System.Windows.Media.Color)(this["DefaultButtonTextColor"]));
            }
            set {
                this["DefaultButtonTextColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ColorCodeAccountMenuItems {
            get {
                return ((bool)(this["ColorCodeAccountMenuItems"]));
            }
            set {
                this["ColorCodeAccountMenuItems"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool RunOnStartup {
            get {
                return ((bool)(this["RunOnStartup"]));
            }
            set {
                this["RunOnStartup"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("16")]
        public double ButtonFontSize {
            get {
                return ((double)(this["ButtonFontSize"]));
            }
            set {
                this["ButtonFontSize"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("10000")]
        public int SteamLogoutTimeoutMax {
            get {
                return ((int)(this["SteamLogoutTimeoutMax"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("50")]
        public int SteamLogoutTimeoutInterval {
            get {
                return ((int)(this["SteamLogoutTimeoutInterval"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool SwitchWindowRememberPosition {
            get {
                return ((bool)(this["SwitchWindowRememberPosition"]));
            }
            set {
                this["SwitchWindowRememberPosition"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"
          <WindowPlacement xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
            <Length>0</Length>
            <Flags />
            <ShowCommand>Hide</ShowCommand>
            <MinimizedPosition>
              <X>0</X>
              <Y>0</Y>
            </MinimizedPosition>
            <MaximizedPosition>
              <X>0</X>
              <Y>0</Y>
            </MaximizedPosition>
            <NormalBounds>
              <Left>0</Left>
              <Top>0</Top>
              <Right>0</Right>
              <Bottom>0</Bottom>
            </NormalBounds>
          </WindowPlacement>
        ")]
        public global::WpfWindowPlacement.WindowPlacement SwitchWindowPlacement {
            get {
                return ((global::WpfWindowPlacement.WindowPlacement)(this["SwitchWindowPlacement"]));
            }
            set {
                this["SwitchWindowPlacement"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool DualPane {
            get {
                return ((bool)(this["DualPane"]));
            }
            set {
                this["DualPane"] = value;
            }
        }
    }
}
